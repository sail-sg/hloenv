HloModule jit_prim_fun__79.359

%jit_vmap_isnan___7.13 (parameter.14: f32[1,392,8]) -> pred[1,392,8] {
  %constant.15 = pred[] constant(false)
  %parameter.14 = f32[1,392,8]{2,1,0} parameter(0)
  ROOT %compare.16 = pred[1,392,8]{2,1,0} compare(f32[1,392,8]{2,1,0} %parameter.14, f32[1,392,8]{2,1,0} %parameter.14), direction=NE, metadata={op_type="ne" op_name="jit(while)/body/jit(vmap(logaddexp))/jit(vmap(isnan))/ne" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=38}
}

%jit_vmap_logaddexp___3.17 (parameter.18: f32[1,392,8], parameter.19: s32[]) -> f32[1,392,8] {
  %constant.20 = pred[] constant(false)
  %parameter.18 = f32[1,392,8]{2,1,0} parameter(0)
  %parameter.19 = s32[] parameter(1)
  %convert.21 = f32[] convert(s32[] %parameter.19), metadata={op_type="convert_element_type" op_name="jit(while)/body/jit(vmap(logaddexp))/convert_element_type[\n  new_dtype=float32\n  weak_type=False\n]" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=38}
  %broadcast.24 = f32[1,392,8]{2,1,0} broadcast(f32[] %convert.21), dimensions={}, metadata={op_type="sub" op_name="jit(while)/body/jit(vmap(logaddexp))/sub" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=38}
  %subtract.25 = f32[1,392,8]{2,1,0} subtract(f32[1,392,8]{2,1,0} %parameter.18, f32[1,392,8]{2,1,0} %broadcast.24), metadata={op_type="sub" op_name="jit(while)/body/jit(vmap(logaddexp))/sub" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=38}
  %call.26 = pred[1,392,8]{2,1,0} call(f32[1,392,8]{2,1,0} %subtract.25), to_apply=%jit_vmap_isnan___7.13, metadata={op_type="xla_call" op_name="jit(while)/body/jit(vmap(logaddexp))/xla_call[\n  backend=None\n  device=None\n  donated_invars=(False,)\n  inline=False\n  name=vmap(isnan)\n]" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=38}
  %broadcast.27 = f32[1,392,8]{2,1,0} broadcast(f32[] %convert.21), dimensions={}, metadata={op_type="add" op_name="jit(while)/body/jit(vmap(logaddexp))/add" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=38}
  %add.28 = f32[1,392,8]{2,1,0} add(f32[1,392,8]{2,1,0} %parameter.18, f32[1,392,8]{2,1,0} %broadcast.27), metadata={op_type="add" op_name="jit(while)/body/jit(vmap(logaddexp))/add" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=38}
  %broadcast.22 = f32[1,392,8]{2,1,0} broadcast(f32[] %convert.21), dimensions={}, metadata={op_type="max" op_name="jit(while)/body/jit(vmap(logaddexp))/max" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=38}
  %maximum.23 = f32[1,392,8]{2,1,0} maximum(f32[1,392,8]{2,1,0} %parameter.18, f32[1,392,8]{2,1,0} %broadcast.22), metadata={op_type="max" op_name="jit(while)/body/jit(vmap(logaddexp))/max" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=38}
  %abs.29 = f32[1,392,8]{2,1,0} abs(f32[1,392,8]{2,1,0} %subtract.25), metadata={op_type="abs" op_name="jit(while)/body/jit(vmap(logaddexp))/abs" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=38}
  %negate.30 = f32[1,392,8]{2,1,0} negate(f32[1,392,8]{2,1,0} %abs.29), metadata={op_type="neg" op_name="jit(while)/body/jit(vmap(logaddexp))/neg" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=38}
  %exponential.31 = f32[1,392,8]{2,1,0} exponential(f32[1,392,8]{2,1,0} %negate.30), metadata={op_type="exp" op_name="jit(while)/body/jit(vmap(logaddexp))/exp" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=38}
  %log-plus-one.32 = f32[1,392,8]{2,1,0} log-plus-one(f32[1,392,8]{2,1,0} %exponential.31), metadata={op_type="log1p" op_name="jit(while)/body/jit(vmap(logaddexp))/log1p" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=38}
  %add.33 = f32[1,392,8]{2,1,0} add(f32[1,392,8]{2,1,0} %maximum.23, f32[1,392,8]{2,1,0} %log-plus-one.32), metadata={op_type="add" op_name="jit(while)/body/jit(vmap(logaddexp))/add" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=38}
  ROOT %select.34 = f32[1,392,8]{2,1,0} select(pred[1,392,8]{2,1,0} %call.26, f32[1,392,8]{2,1,0} %add.28, f32[1,392,8]{2,1,0} %add.33), metadata={op_type="select" op_name="jit(while)/body/jit(vmap(logaddexp))/select" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=38}
}

%primitive_computation_max__4.35 (parameter.36: f32[], parameter.37: f32[]) -> f32[] {
  %constant.38 = pred[] constant(false)
  %parameter.36 = f32[] parameter(0)
  %parameter.37 = f32[] parameter(1)
  ROOT %maximum.39 = f32[] maximum(f32[] %parameter.36, f32[] %parameter.37), metadata={op_type="max" op_name="max" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=43}
}

%jit_vmap_isfinite___3.40 (parameter.41: f32[1,2,392]) -> pred[1,2,392] {
  %constant.42 = pred[] constant(false)
  %parameter.41 = f32[1,2,392]{2,1,0} parameter(0)
  ROOT %is-finite.43 = pred[1,2,392]{2,1,0} is-finite(f32[1,2,392]{2,1,0} %parameter.41), metadata={op_type="is_finite" op_name="jit(while)/body/jit(vmap(isfinite))/is_finite" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=43}
}

%primitive_computation_add__32.44 (parameter.45: f32[], parameter.46: f32[]) -> f32[] {
  %constant.47 = pred[] constant(false)
  %parameter.45 = f32[] parameter(0)
  %parameter.46 = f32[] parameter(1)
  ROOT %add.48 = f32[] add(f32[] %parameter.45, f32[] %parameter.46), metadata={op_type="add" op_name="add" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=43}
}

%jit_vmap_isnan___8.49 (parameter.50: f32[1,2,392]) -> pred[1,2,392] {
  %constant.51 = pred[] constant(false)
  %parameter.50 = f32[1,2,392]{2,1,0} parameter(0)
  ROOT %compare.52 = pred[1,2,392]{2,1,0} compare(f32[1,2,392]{2,1,0} %parameter.50, f32[1,2,392]{2,1,0} %parameter.50), direction=NE, metadata={op_type="ne" op_name="jit(while)/body/jit(vmap(isnan))/ne" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=43}
}

%jit_vmap__where___6.53 (parameter.54: pred[1,2,392], parameter.55: f32[1,2,392], parameter.56: f32[]) -> f32[1,2,392] {
  %constant.57 = pred[] constant(false)
  %parameter.54 = pred[1,2,392]{2,1,0} parameter(0)
  %parameter.55 = f32[1,2,392]{2,1,0} parameter(1)
  %parameter.56 = f32[] parameter(2)
  %convert.58 = f32[] convert(f32[] %parameter.56), metadata={op_type="convert_element_type" op_name="jit(while)/body/jit(vmap(_where))/convert_element_type[\n  new_dtype=float32\n  weak_type=False\n]" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=43}
  %broadcast.59 = f32[2,392]{1,0} broadcast(f32[] %convert.58), dimensions={}, metadata={op_type="broadcast_in_dim" op_name="jit(while)/body/jit(vmap(_where))/broadcast_in_dim[\n  broadcast_dimensions=()\n  shape=(2, 392)\n]" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=43}
  %broadcast.60 = f32[1,2,392]{2,1,0} broadcast(f32[2,392]{1,0} %broadcast.59), dimensions={1,2}, metadata={op_type="broadcast_in_dim" op_name="jit(while)/body/jit(vmap(_where))/broadcast_in_dim[\n  broadcast_dimensions=(1, 2)\n  shape=(1, 2, 392)\n]" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=43}
  ROOT %select.61 = f32[1,2,392]{2,1,0} select(pred[1,2,392]{2,1,0} %parameter.54, f32[1,2,392]{2,1,0} %parameter.55, f32[1,2,392]{2,1,0} %broadcast.60), metadata={op_type="select" op_name="jit(while)/body/jit(vmap(_where))/select" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=43}
}

%jit_vmap__where___7.62 (parameter.63: pred[1,2,392], parameter.64: f32[], parameter.65: f32[1,2,392]) -> f32[1,2,392] {
  %constant.66 = pred[] constant(false)
  %parameter.63 = pred[1,2,392]{2,1,0} parameter(0)
  %parameter.64 = f32[] parameter(1)
  %convert.67 = f32[] convert(f32[] %parameter.64), metadata={op_type="convert_element_type" op_name="jit(while)/body/jit(vmap(_where))/convert_element_type[\n  new_dtype=float32\n  weak_type=False\n]" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=43}
  %broadcast.68 = f32[2,392]{1,0} broadcast(f32[] %convert.67), dimensions={}, metadata={op_type="broadcast_in_dim" op_name="jit(while)/body/jit(vmap(_where))/broadcast_in_dim[\n  broadcast_dimensions=()\n  shape=(2, 392)\n]" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=43}
  %broadcast.69 = f32[1,2,392]{2,1,0} broadcast(f32[2,392]{1,0} %broadcast.68), dimensions={1,2}, metadata={op_type="broadcast_in_dim" op_name="jit(while)/body/jit(vmap(_where))/broadcast_in_dim[\n  broadcast_dimensions=(1, 2)\n  shape=(1, 2, 392)\n]" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=43}
  %parameter.65 = f32[1,2,392]{2,1,0} parameter(2)
  ROOT %select.70 = f32[1,2,392]{2,1,0} select(pred[1,2,392]{2,1,0} %parameter.63, f32[1,2,392]{2,1,0} %broadcast.69, f32[1,2,392]{2,1,0} %parameter.65), metadata={op_type="select" op_name="jit(while)/body/jit(vmap(_where))/select" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=43}
}

%primitive_computation_add__33.71 (parameter.72: f32[], parameter.73: f32[]) -> f32[] {
  %constant.74 = pred[] constant(false)
  %parameter.72 = f32[] parameter(0)
  %parameter.73 = f32[] parameter(1)
  ROOT %add.75 = f32[] add(f32[] %parameter.72, f32[] %parameter.73), metadata={op_type="add" op_name="add" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=55}
}

%primitive_computation_add__34.76 (parameter.77: f32[], parameter.78: f32[]) -> f32[] {
  %constant.79 = pred[] constant(false)
  %parameter.77 = f32[] parameter(0)
  %parameter.78 = f32[] parameter(1)
  ROOT %add.80 = f32[] add(f32[] %parameter.77, f32[] %parameter.78), metadata={op_type="add" op_name="add" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=59}
}

%primitive_computation_add__35.81 (parameter.82: f32[], parameter.83: f32[]) -> f32[] {
  %constant.84 = pred[] constant(false)
  %parameter.82 = f32[] parameter(0)
  %parameter.83 = f32[] parameter(1)
  ROOT %add.85 = f32[] add(f32[] %parameter.82, f32[] %parameter.83), metadata={op_type="add" op_name="add" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=60}
}

%primitive_computation_add__36.86 (parameter.87: f32[], parameter.88: f32[]) -> f32[] {
  %constant.89 = pred[] constant(false)
  %parameter.87 = f32[] parameter(0)
  %parameter.88 = f32[] parameter(1)
  ROOT %add.90 = f32[] add(f32[] %parameter.87, f32[] %parameter.88), metadata={op_type="add" op_name="add" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=61}
}

%body_computation__16.91 (parameter.92: (f32[1,392,8], f32[1,392,8], f32[1,392,8], f32[1,392], f32[1,392], /*index=5*/f32[1,392], f32[1,392], f32[1,392], f32[1,392], f32[])) -> (f32[1,392,8], f32[1,392,8], f32[1,392,8], f32[1,392], f32[1,392], /*index=5*/f32[1,392], f32[1,392], f32[1,392], f32[1,392], f32[]) {
  %parameter.92 = (f32[1,392,8]{2,1,0}, f32[1,392,8]{2,1,0}, f32[1,392,8]{2,1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, /*index=5*/f32[1,392]{1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, f32[]) parameter(0)
  %get-tuple-element.101 = f32[1,392]{1,0} get-tuple-element((f32[1,392,8]{2,1,0}, f32[1,392,8]{2,1,0}, f32[1,392,8]{2,1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, /*index=5*/f32[1,392]{1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, f32[]) %parameter.92), index=8
  %constant.103 = pred[] constant(false)
  %constant.151 = pred[] constant(false), metadata={op_type="custom_jvp_call_jaxpr" op_name="jit(while)/body/custom_jvp_call_jaxpr[\n  jvp_jaxpr_thunk=<function _memoize.<locals>.memoized at 0x7f2d847ccdc0>\n  num_consts=0\n]" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=38}
  %get-tuple-element.95 = f32[1,392,8]{2,1,0} get-tuple-element((f32[1,392,8]{2,1,0}, f32[1,392,8]{2,1,0}, f32[1,392,8]{2,1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, /*index=5*/f32[1,392]{1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, f32[]) %parameter.92), index=2
  %broadcast.158 = f32[1,1,392,8]{3,2,1,0} broadcast(f32[1,392,8]{2,1,0} %get-tuple-element.95), dimensions={0,2,3}, metadata={op_type="broadcast_in_dim" op_name="jit(while)/body/broadcast_in_dim[\n  broadcast_dimensions=(0, 2, 3)\n  shape=(1, 1, 392, 8)\n]" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=42}
  %reshape.159 = f32[1,392,8]{2,1,0} reshape(f32[1,1,392,8]{3,2,1,0} %broadcast.158), metadata={op_type="add" op_name="jit(while)/body/add" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=42}
  %broadcast.160 = f32[1,2,392,8]{3,2,1,0} broadcast(f32[1,392,8]{2,1,0} %reshape.159), dimensions={0,2,3}, metadata={op_type="add" op_name="jit(while)/body/add" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=42}
  %get-tuple-element.97 = f32[1,392]{1,0} get-tuple-element((f32[1,392,8]{2,1,0}, f32[1,392,8]{2,1,0}, f32[1,392,8]{2,1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, /*index=5*/f32[1,392]{1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, f32[]) %parameter.92), index=4
  %get-tuple-element.96 = f32[1,392]{1,0} get-tuple-element((f32[1,392,8]{2,1,0}, f32[1,392,8]{2,1,0}, f32[1,392,8]{2,1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, /*index=5*/f32[1,392]{1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, f32[]) %parameter.92), index=3
  %compare.104 = pred[1,392]{1,0} compare(f32[1,392]{1,0} %get-tuple-element.97, f32[1,392]{1,0} %get-tuple-element.96), direction=GT, metadata={op_type="gt" op_name="jit(while)/body/gt" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=25}
  %convert.109 = f32[1,392]{1,0} convert(pred[1,392]{1,0} %compare.104), metadata={op_type="convert_element_type" op_name="jit(while)/body/convert_element_type[new_dtype=float32 weak_type=True]" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=28}
  %constant.110 = f32[] constant(0.5), metadata={op_type="mul" op_name="jit(while)/body/mul" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=28}
  %broadcast.111 = f32[1,392]{1,0} broadcast(f32[] %constant.110), dimensions={}, metadata={op_type="mul" op_name="jit(while)/body/mul" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=28}
  %multiply.112 = f32[1,392]{1,0} multiply(f32[1,392]{1,0} %convert.109, f32[1,392]{1,0} %broadcast.111), metadata={op_type="mul" op_name="jit(while)/body/mul" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=28}
  %convert.115 = f32[1,392]{1,0} convert(f32[1,392]{1,0} %multiply.112), metadata={op_type="convert_element_type" op_name="jit(while)/body/convert_element_type[new_dtype=float32 weak_type=False]" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=28}
  %get-tuple-element.98 = f32[1,392]{1,0} get-tuple-element((f32[1,392,8]{2,1,0}, f32[1,392,8]{2,1,0}, f32[1,392,8]{2,1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, /*index=5*/f32[1,392]{1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, f32[]) %parameter.92), index=5
  %get-tuple-element.99 = f32[1,392]{1,0} get-tuple-element((f32[1,392,8]{2,1,0}, f32[1,392,8]{2,1,0}, f32[1,392,8]{2,1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, /*index=5*/f32[1,392]{1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, f32[]) %parameter.92), index=6
  %convert.113 = f32[1,392]{1,0} convert(f32[1,392]{1,0} %get-tuple-element.99), metadata={op_type="convert_element_type" op_name="jit(while)/body/convert_element_type[new_dtype=float32 weak_type=False]" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=28}
  %add.114 = f32[1,392]{1,0} add(f32[1,392]{1,0} %get-tuple-element.98, f32[1,392]{1,0} %convert.113), metadata={op_type="add" op_name="jit(while)/body/add" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=28}
  %multiply.116 = f32[1,392]{1,0} multiply(f32[1,392]{1,0} %convert.115, f32[1,392]{1,0} %add.114), metadata={op_type="mul" op_name="jit(while)/body/mul" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=28}
  %constant.106 = f32[] constant(1), metadata={op_type="sub" op_name="jit(while)/body/sub" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=26}
  %broadcast.107 = f32[1,392]{1,0} broadcast(f32[] %constant.106), dimensions={}, metadata={op_type="sub" op_name="jit(while)/body/sub" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=26}
  %convert.105 = f32[1,392]{1,0} convert(pred[1,392]{1,0} %compare.104), metadata={op_type="convert_element_type" op_name="jit(while)/body/convert_element_type[new_dtype=float32 weak_type=True]" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=26}
  %subtract.108 = f32[1,392]{1,0} subtract(f32[1,392]{1,0} %broadcast.107, f32[1,392]{1,0} %convert.105), metadata={op_type="sub" op_name="jit(while)/body/sub" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=26}
  %constant.117 = f32[] constant(0.5), metadata={op_type="mul" op_name="jit(while)/body/mul" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=28}
  %broadcast.118 = f32[1,392]{1,0} broadcast(f32[] %constant.117), dimensions={}, metadata={op_type="mul" op_name="jit(while)/body/mul" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=28}
  %multiply.119 = f32[1,392]{1,0} multiply(f32[1,392]{1,0} %subtract.108, f32[1,392]{1,0} %broadcast.118), metadata={op_type="mul" op_name="jit(while)/body/mul" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=28}
  %convert.122 = f32[1,392]{1,0} convert(f32[1,392]{1,0} %multiply.119), metadata={op_type="convert_element_type" op_name="jit(while)/body/convert_element_type[new_dtype=float32 weak_type=False]" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=28}
  %get-tuple-element.100 = f32[1,392]{1,0} get-tuple-element((f32[1,392,8]{2,1,0}, f32[1,392,8]{2,1,0}, f32[1,392,8]{2,1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, /*index=5*/f32[1,392]{1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, f32[]) %parameter.92), index=7
  %convert.120 = f32[1,392]{1,0} convert(f32[1,392]{1,0} %get-tuple-element.100), metadata={op_type="convert_element_type" op_name="jit(while)/body/convert_element_type[new_dtype=float32 weak_type=False]" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=28}
  %add.121 = f32[1,392]{1,0} add(f32[1,392]{1,0} %get-tuple-element.98, f32[1,392]{1,0} %convert.120), metadata={op_type="add" op_name="jit(while)/body/add" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=28}
  %multiply.123 = f32[1,392]{1,0} multiply(f32[1,392]{1,0} %convert.122, f32[1,392]{1,0} %add.121), metadata={op_type="mul" op_name="jit(while)/body/mul" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=28}
  %add.124 = f32[1,392]{1,0} add(f32[1,392]{1,0} %multiply.116, f32[1,392]{1,0} %multiply.123), metadata={op_type="add" op_name="jit(while)/body/add" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=28}
  %broadcast.144 = f32[1,392,1]{2,1,0} broadcast(f32[1,392]{1,0} %add.124), dimensions={0,1}, metadata={op_type="broadcast_in_dim" op_name="jit(while)/body/broadcast_in_dim[broadcast_dimensions=(0, 1) shape=(1, 392, 1)]" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=35}
  %reshape.145 = f32[1,392]{1,0} reshape(f32[1,392,1]{2,1,0} %broadcast.144), metadata={op_type="sub" op_name="jit(while)/body/sub" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=35}
  %broadcast.146 = f32[1,392,8]{2,1,0} broadcast(f32[1,392]{1,0} %reshape.145), dimensions={0,1}, metadata={op_type="sub" op_name="jit(while)/body/sub" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=35}
  %get-tuple-element.93 = f32[1,392,8]{2,1,0} get-tuple-element((f32[1,392,8]{2,1,0}, f32[1,392,8]{2,1,0}, f32[1,392,8]{2,1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, /*index=5*/f32[1,392]{1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, f32[]) %parameter.92), index=0
  %subtract.147 = f32[1,392,8]{2,1,0} subtract(f32[1,392,8]{2,1,0} %broadcast.146, f32[1,392,8]{2,1,0} %get-tuple-element.93), metadata={op_type="sub" op_name="jit(while)/body/sub" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=35}
  %get-tuple-element.94 = f32[1,392,8]{2,1,0} get-tuple-element((f32[1,392,8]{2,1,0}, f32[1,392,8]{2,1,0}, f32[1,392,8]{2,1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, /*index=5*/f32[1,392]{1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, f32[]) %parameter.92), index=1
  %multiply.148 = f32[1,392,8]{2,1,0} multiply(f32[1,392,8]{2,1,0} %subtract.147, f32[1,392,8]{2,1,0} %get-tuple-element.94), metadata={op_type="mul" op_name="jit(while)/body/mul" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=36}
  %negate.149 = f32[1,392,8]{2,1,0} negate(f32[1,392,8]{2,1,0} %multiply.148), metadata={op_type="neg" op_name="jit(while)/body/neg" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=38}
  %constant.150 = s32[] constant(0), metadata={op_type="custom_jvp_call_jaxpr" op_name="jit(while)/body/custom_jvp_call_jaxpr[\n  jvp_jaxpr_thunk=<function _memoize.<locals>.memoized at 0x7f2d847ccdc0>\n  num_consts=0\n]" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=38}
  %call.152 = f32[1,392,8]{2,1,0} call(f32[1,392,8]{2,1,0} %negate.149, s32[] %constant.150), to_apply=%jit_vmap_logaddexp___3.17, metadata={op_type="xla_call" op_name="jit(while)/body/xla_call[\n  backend=None\n  device=None\n  donated_invars=(False, False)\n  inline=False\n  name=vmap(logaddexp)\n]" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=38}
  %negate.153 = f32[1,392,8]{2,1,0} negate(f32[1,392,8]{2,1,0} %call.152), metadata={op_type="neg" op_name="jit(while)/body/neg" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=38}
  %broadcast.155 = f32[1,1,392,8]{3,2,1,0} broadcast(f32[1,392,8]{2,1,0} %negate.153), dimensions={0,2,3}, metadata={op_type="broadcast_in_dim" op_name="jit(while)/body/broadcast_in_dim[\n  broadcast_dimensions=(0, 2, 3)\n  shape=(1, 1, 392, 8)\n]" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=41}
  %subtract.154 = f32[1,392,8]{2,1,0} subtract(f32[1,392,8]{2,1,0} %negate.153, f32[1,392,8]{2,1,0} %multiply.148), metadata={op_type="sub" op_name="jit(while)/body/sub" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=39}
  %broadcast.156 = f32[1,1,392,8]{3,2,1,0} broadcast(f32[1,392,8]{2,1,0} %subtract.154), dimensions={0,2,3}, metadata={op_type="broadcast_in_dim" op_name="jit(while)/body/broadcast_in_dim[\n  broadcast_dimensions=(0, 2, 3)\n  shape=(1, 1, 392, 8)\n]" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=41}
  %concatenate.157 = f32[1,2,392,8]{3,2,1,0} concatenate(f32[1,1,392,8]{3,2,1,0} %broadcast.155, f32[1,1,392,8]{3,2,1,0} %broadcast.156), dimensions={1}, metadata={op_type="concatenate" op_name="jit(while)/body/concatenate[dimension=1]" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=41}
  %add.161 = f32[1,2,392,8]{3,2,1,0} add(f32[1,2,392,8]{3,2,1,0} %broadcast.160, f32[1,2,392,8]{3,2,1,0} %concatenate.157), metadata={op_type="add" op_name="jit(while)/body/add" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=42}
  %constant.162 = f32[] constant(-inf), metadata={op_type="reduce_max" op_name="jit(while)/body/reduce_max[axes=(3,)]" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=43}
  %reduce.163 = f32[1,2,392]{2,1,0} reduce(f32[1,2,392,8]{3,2,1,0} %add.161, f32[] %constant.162), dimensions={3}, to_apply=%primitive_computation_max__4.35, metadata={op_type="reduce_max" op_name="jit(while)/body/reduce_max[axes=(3,)]" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=43}
  %call.164 = pred[1,2,392]{2,1,0} call(f32[1,2,392]{2,1,0} %reduce.163), to_apply=%jit_vmap_isfinite___3.40, metadata={op_type="xla_call" op_name="jit(while)/body/xla_call[\n  backend=None\n  device=None\n  donated_invars=(False,)\n  inline=False\n  name=vmap(isfinite)\n]" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=43}
  %constant.165 = f32[] constant(0), metadata={op_type="broadcast_in_dim" op_name="jit(while)/body/broadcast_in_dim[broadcast_dimensions=() shape=(2, 392)]" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=43}
  %broadcast.166 = f32[2,392]{1,0} broadcast(f32[] %constant.165), dimensions={}, metadata={op_type="broadcast_in_dim" op_name="jit(while)/body/broadcast_in_dim[broadcast_dimensions=() shape=(2, 392)]" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=43}
  %broadcast.167 = f32[1,2,392]{2,1,0} broadcast(f32[2,392]{1,0} %broadcast.166), dimensions={1,2}, metadata={op_type="broadcast_in_dim" op_name="jit(while)/body/broadcast_in_dim[broadcast_dimensions=(1, 2) shape=(1, 2, 392)]" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=43}
  %select.168 = f32[1,2,392]{2,1,0} select(pred[1,2,392]{2,1,0} %call.164, f32[1,2,392]{2,1,0} %reduce.163, f32[1,2,392]{2,1,0} %broadcast.167), metadata={op_type="select" op_name="jit(while)/body/select" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=43}
  %broadcast.169 = f32[1,2,392,1]{3,2,1,0} broadcast(f32[1,2,392]{2,1,0} %select.168), dimensions={0,1,2}, metadata={op_type="broadcast_in_dim" op_name="jit(while)/body/broadcast_in_dim[\n  broadcast_dimensions=(0, 1, 2)\n  shape=(1, 2, 392, 1)\n]" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=43}
  %reshape.170 = f32[1,2,392]{2,1,0} reshape(f32[1,2,392,1]{3,2,1,0} %broadcast.169), metadata={op_type="sub" op_name="jit(while)/body/sub" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=43}
  %broadcast.171 = f32[1,2,392,8]{3,2,1,0} broadcast(f32[1,2,392]{2,1,0} %reshape.170), dimensions={0,1,2}, metadata={op_type="sub" op_name="jit(while)/body/sub" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=43}
  %subtract.172 = f32[1,2,392,8]{3,2,1,0} subtract(f32[1,2,392,8]{3,2,1,0} %add.161, f32[1,2,392,8]{3,2,1,0} %broadcast.171), metadata={op_type="sub" op_name="jit(while)/body/sub" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=43}
  %exponential.173 = f32[1,2,392,8]{3,2,1,0} exponential(f32[1,2,392,8]{3,2,1,0} %subtract.172), metadata={op_type="exp" op_name="jit(while)/body/exp" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=43}
  %constant.174 = f32[] constant(0), metadata={op_type="reduce_sum" op_name="jit(while)/body/reduce_sum[axes=(3,)]" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=43}
  %reduce.175 = f32[1,2,392]{2,1,0} reduce(f32[1,2,392,8]{3,2,1,0} %exponential.173, f32[] %constant.174), dimensions={3}, to_apply=%primitive_computation_add__32.44, metadata={op_type="reduce_sum" op_name="jit(while)/body/reduce_sum[axes=(3,)]" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=43}
  %log.176 = f32[1,2,392]{2,1,0} log(f32[1,2,392]{2,1,0} %reduce.175), metadata={op_type="log" op_name="jit(while)/body/log" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=43}
  %add.177 = f32[1,2,392]{2,1,0} add(f32[1,2,392]{2,1,0} %log.176, f32[1,2,392]{2,1,0} %select.168), metadata={op_type="add" op_name="jit(while)/body/add" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=43}
  %constant.181 = f32[] constant(-inf), metadata={op_type="eq" op_name="jit(while)/body/eq" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=43}
  %broadcast.182 = f32[1,2,392]{2,1,0} broadcast(f32[] %constant.181), dimensions={}, metadata={op_type="eq" op_name="jit(while)/body/eq" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=43}
  %compare.183 = pred[1,2,392]{2,1,0} compare(f32[1,2,392]{2,1,0} %add.177, f32[1,2,392]{2,1,0} %broadcast.182), direction=EQ, metadata={op_type="eq" op_name="jit(while)/body/eq" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=43}
  %constant.184 = f32[] constant(0), metadata={op_type="xla_call" op_name="jit(while)/body/xla_call[\n  backend=None\n  device=None\n  donated_invars=(False, False, False)\n  inline=False\n  name=vmap(_where)\n]" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=43}
  %call.178 = pred[1,2,392]{2,1,0} call(f32[1,2,392]{2,1,0} %add.177), to_apply=%jit_vmap_isnan___8.49, metadata={op_type="xla_call" op_name="jit(while)/body/xla_call[\n  backend=None\n  device=None\n  donated_invars=(False,)\n  inline=False\n  name=vmap(isnan)\n]" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=43}
  %constant.179 = f32[] constant(1), metadata={op_type="xla_call" op_name="jit(while)/body/xla_call[\n  backend=None\n  device=None\n  donated_invars=(False, False, False)\n  inline=False\n  name=vmap(_where)\n]" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=43}
  %call.180 = f32[1,2,392]{2,1,0} call(pred[1,2,392]{2,1,0} %call.178, f32[1,2,392]{2,1,0} %add.177, f32[] %constant.179), to_apply=%jit_vmap__where___6.53, metadata={op_type="xla_call" op_name="jit(while)/body/xla_call[\n  backend=None\n  device=None\n  donated_invars=(False, False, False)\n  inline=False\n  name=vmap(_where)\n]" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=43}
  %call.185 = f32[1,2,392]{2,1,0} call(pred[1,2,392]{2,1,0} %compare.183, f32[] %constant.184, f32[1,2,392]{2,1,0} %call.180), to_apply=%jit_vmap__where___7.62, metadata={op_type="xla_call" op_name="jit(while)/body/xla_call[\n  backend=None\n  device=None\n  donated_invars=(False, False, False)\n  inline=False\n  name=vmap(_where)\n]" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=43}
  %broadcast.191 = f32[1,2,392,1]{3,2,1,0} broadcast(f32[1,2,392]{2,1,0} %add.177), dimensions={0,1,2}, metadata={op_type="broadcast_in_dim" op_name="jit(while)/body/broadcast_in_dim[\n  broadcast_dimensions=(0, 1, 2)\n  shape=(1, 2, 392, 1)\n]" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=48}
  %reshape.192 = f32[1,2,392]{2,1,0} reshape(f32[1,2,392,1]{3,2,1,0} %broadcast.191), metadata={op_type="sub" op_name="jit(while)/body/sub" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=48}
  %broadcast.193 = f32[1,2,392,8]{3,2,1,0} broadcast(f32[1,2,392]{2,1,0} %reshape.192), dimensions={0,1,2}, metadata={op_type="sub" op_name="jit(while)/body/sub" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=48}
  %subtract.194 = f32[1,2,392,8]{3,2,1,0} subtract(f32[1,2,392,8]{3,2,1,0} %add.161, f32[1,2,392,8]{3,2,1,0} %broadcast.193), metadata={op_type="sub" op_name="jit(while)/body/sub" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=48}
  %exponential.195 = f32[1,2,392,8]{3,2,1,0} exponential(f32[1,2,392,8]{3,2,1,0} %subtract.194), metadata={op_type="exp" op_name="jit(while)/body/exp" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=48}
  %slice.196 = f32[1,1,392,8]{3,2,1,0} slice(f32[1,2,392,8]{3,2,1,0} %exponential.195), slice={[0:1], [0:1], [0:392], [0:8]}, metadata={op_type="slice" op_name="jit(while)/body/slice[\n  limit_indices=(1, 1, 392, 8)\n  start_indices=(0, 0, 0, 0)\n  strides=(1, 1, 1, 1)\n]" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=49}
  %reshape.197 = f32[1,392,8]{2,1,0} reshape(f32[1,1,392,8]{3,2,1,0} %slice.196), metadata={op_type="squeeze" op_name="jit(while)/body/squeeze[dimensions=(1,)]" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=49}
  %slice.198 = f32[1,1,392,8]{3,2,1,0} slice(f32[1,2,392,8]{3,2,1,0} %exponential.195), slice={[0:1], [1:2], [0:392], [0:8]}, metadata={op_type="slice" op_name="jit(while)/body/slice[\n  limit_indices=(1, 2, 392, 8)\n  start_indices=(0, 1, 0, 0)\n  strides=(1, 1, 1, 1)\n]" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=49}
  %reshape.199 = f32[1,392,8]{2,1,0} reshape(f32[1,1,392,8]{3,2,1,0} %slice.198), metadata={op_type="squeeze" op_name="jit(while)/body/squeeze[dimensions=(1,)]" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=49}
  %subtract.214 = f32[1,392,8]{2,1,0} subtract(f32[1,392,8]{2,1,0} %reshape.197, f32[1,392,8]{2,1,0} %reshape.199), metadata={op_type="sub" op_name="jit(while)/body/sub" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=57}
  %constant.136 = f32[] constant(0), metadata={op_type="broadcast_in_dim" op_name="jit(while)/body/broadcast_in_dim[broadcast_dimensions=() shape=(392, 8)]" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=117}
  %broadcast.137 = f32[392,8]{1,0} broadcast(f32[] %constant.136), dimensions={}, metadata={op_type="broadcast_in_dim" op_name="jit(while)/body/broadcast_in_dim[broadcast_dimensions=() shape=(392, 8)]" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=117}
  %broadcast.215 = f32[1,392,8]{2,1,0} broadcast(f32[392,8]{1,0} %broadcast.137), dimensions={1,2}, metadata={op_type="broadcast_in_dim" op_name="jit(while)/body/broadcast_in_dim[broadcast_dimensions=(1, 2) shape=(1, 392, 8)]" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=59}
  %multiply.216 = f32[1,392,8]{2,1,0} multiply(f32[1,392,8]{2,1,0} %subtract.214, f32[1,392,8]{2,1,0} %broadcast.215), metadata={op_type="mul" op_name="jit(while)/body/mul" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=59}
  %constant.217 = f32[] constant(0), metadata={op_type="reduce_sum" op_name="jit(while)/body/reduce_sum[axes=(2,)]" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=59}
  %reduce.218 = f32[1,392]{1,0} reduce(f32[1,392,8]{2,1,0} %multiply.216, f32[] %constant.217), dimensions={2}, to_apply=%primitive_computation_add__34.76, metadata={op_type="reduce_sum" op_name="jit(while)/body/reduce_sum[axes=(2,)]" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=59}
  %exponential.200 = f32[1,2,392,8]{3,2,1,0} exponential(f32[1,2,392,8]{3,2,1,0} %concatenate.157), metadata={op_type="exp" op_name="jit(while)/body/exp" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=50}
  %slice.203 = f32[1,1,392,8]{3,2,1,0} slice(f32[1,2,392,8]{3,2,1,0} %exponential.200), slice={[0:1], [1:2], [0:392], [0:8]}, metadata={op_type="slice" op_name="jit(while)/body/slice[\n  limit_indices=(1, 2, 392, 8)\n  start_indices=(0, 1, 0, 0)\n  strides=(1, 1, 1, 1)\n]" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=50}
  %reshape.204 = f32[1,392,8]{2,1,0} reshape(f32[1,1,392,8]{3,2,1,0} %slice.203), metadata={op_type="squeeze" op_name="jit(while)/body/squeeze[dimensions=(1,)]" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=50}
  %multiply.205 = f32[1,392,8]{2,1,0} multiply(f32[1,392,8]{2,1,0} %reshape.197, f32[1,392,8]{2,1,0} %reshape.204), metadata={op_type="mul" op_name="jit(while)/body/mul" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=51}
  %slice.201 = f32[1,1,392,8]{3,2,1,0} slice(f32[1,2,392,8]{3,2,1,0} %exponential.200), slice={[0:1], [0:1], [0:392], [0:8]}, metadata={op_type="slice" op_name="jit(while)/body/slice[\n  limit_indices=(1, 1, 392, 8)\n  start_indices=(0, 0, 0, 0)\n  strides=(1, 1, 1, 1)\n]" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=50}
  %reshape.202 = f32[1,392,8]{2,1,0} reshape(f32[1,1,392,8]{3,2,1,0} %slice.201), metadata={op_type="squeeze" op_name="jit(while)/body/squeeze[dimensions=(1,)]" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=50}
  %multiply.206 = f32[1,392,8]{2,1,0} multiply(f32[1,392,8]{2,1,0} %reshape.199, f32[1,392,8]{2,1,0} %reshape.202), metadata={op_type="mul" op_name="jit(while)/body/mul" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=51}
  %add.207 = f32[1,392,8]{2,1,0} add(f32[1,392,8]{2,1,0} %multiply.205, f32[1,392,8]{2,1,0} %multiply.206), metadata={op_type="add" op_name="jit(while)/body/add" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=51}
  %negate.208 = f32[1,392,8]{2,1,0} negate(f32[1,392,8]{2,1,0} %add.207), metadata={op_type="neg" op_name="jit(while)/body/neg" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=54}
  %multiply.209 = f32[1,392,8]{2,1,0} multiply(f32[1,392,8]{2,1,0} %negate.208, f32[1,392,8]{2,1,0} %get-tuple-element.94), metadata={op_type="mul" op_name="jit(while)/body/mul" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=54}
  %constant.138 = f32[] constant(0), metadata={op_type="broadcast_in_dim" op_name="jit(while)/body/broadcast_in_dim[broadcast_dimensions=() shape=(392, 8)]" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=117}
  %broadcast.139 = f32[392,8]{1,0} broadcast(f32[] %constant.138), dimensions={}, metadata={op_type="broadcast_in_dim" op_name="jit(while)/body/broadcast_in_dim[broadcast_dimensions=() shape=(392, 8)]" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=117}
  %broadcast.219 = f32[1,392,8]{2,1,0} broadcast(f32[392,8]{1,0} %broadcast.139), dimensions={1,2}, metadata={op_type="broadcast_in_dim" op_name="jit(while)/body/broadcast_in_dim[broadcast_dimensions=(1, 2) shape=(1, 392, 8)]" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=60}
  %multiply.220 = f32[1,392,8]{2,1,0} multiply(f32[1,392,8]{2,1,0} %multiply.209, f32[1,392,8]{2,1,0} %broadcast.219), metadata={op_type="mul" op_name="jit(while)/body/mul" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=60}
  %constant.221 = f32[] constant(0), metadata={op_type="reduce_sum" op_name="jit(while)/body/reduce_sum[axes=(2,)]" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=60}
  %reduce.222 = f32[1,392]{1,0} reduce(f32[1,392,8]{2,1,0} %multiply.220, f32[] %constant.221), dimensions={2}, to_apply=%primitive_computation_add__35.81, metadata={op_type="reduce_sum" op_name="jit(while)/body/reduce_sum[axes=(2,)]" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=60}
  %add.223 = f32[1,392]{1,0} add(f32[1,392]{1,0} %reduce.218, f32[1,392]{1,0} %reduce.222), metadata={op_type="add" op_name="jit(while)/body/add" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=60}
  %multiply.213 = f32[1,392,8]{2,1,0} multiply(f32[1,392,8]{2,1,0} %add.207, f32[1,392,8]{2,1,0} %subtract.147), metadata={op_type="mul" op_name="jit(while)/body/mul" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=56}
  %constant.140 = f32[] constant(0), metadata={op_type="broadcast_in_dim" op_name="jit(while)/body/broadcast_in_dim[broadcast_dimensions=() shape=(392, 8)]" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=117}
  %broadcast.141 = f32[392,8]{1,0} broadcast(f32[] %constant.140), dimensions={}, metadata={op_type="broadcast_in_dim" op_name="jit(while)/body/broadcast_in_dim[broadcast_dimensions=() shape=(392, 8)]" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=117}
  %broadcast.224 = f32[1,392,8]{2,1,0} broadcast(f32[392,8]{1,0} %broadcast.141), dimensions={1,2}, metadata={op_type="broadcast_in_dim" op_name="jit(while)/body/broadcast_in_dim[broadcast_dimensions=(1, 2) shape=(1, 392, 8)]" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=61}
  %multiply.225 = f32[1,392,8]{2,1,0} multiply(f32[1,392,8]{2,1,0} %multiply.213, f32[1,392,8]{2,1,0} %broadcast.224), metadata={op_type="mul" op_name="jit(while)/body/mul" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=61}
  %constant.226 = f32[] constant(0), metadata={op_type="reduce_sum" op_name="jit(while)/body/reduce_sum[axes=(2,)]" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=61}
  %reduce.227 = f32[1,392]{1,0} reduce(f32[1,392,8]{2,1,0} %multiply.225, f32[] %constant.226), dimensions={2}, to_apply=%primitive_computation_add__36.86, metadata={op_type="reduce_sum" op_name="jit(while)/body/reduce_sum[axes=(2,)]" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=61}
  %add.228 = f32[1,392]{1,0} add(f32[1,392]{1,0} %add.223, f32[1,392]{1,0} %reduce.227), metadata={op_type="add" op_name="jit(while)/body/add" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=61}
  %constant.210 = f32[] constant(0), metadata={op_type="reduce_sum" op_name="jit(while)/body/reduce_sum[axes=(2,)]" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=55}
  %reduce.211 = f32[1,392]{1,0} reduce(f32[1,392,8]{2,1,0} %multiply.209, f32[] %constant.210), dimensions={2}, to_apply=%primitive_computation_add__33.71, metadata={op_type="reduce_sum" op_name="jit(while)/body/reduce_sum[axes=(2,)]" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=55}
  %negate.212 = f32[1,392]{1,0} negate(f32[1,392]{1,0} %reduce.211), metadata={op_type="neg" op_name="jit(while)/body/neg" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=55}
  %constant.142 = f32[] constant(1), metadata={op_type="broadcast_in_dim" op_name="jit(while)/body/broadcast_in_dim[broadcast_dimensions=() shape=(392,)]" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=117}
  %broadcast.143 = f32[392]{0} broadcast(f32[] %constant.142), dimensions={}, metadata={op_type="broadcast_in_dim" op_name="jit(while)/body/broadcast_in_dim[broadcast_dimensions=() shape=(392,)]" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=117}
  %broadcast.229 = f32[1,392]{1,0} broadcast(f32[392]{0} %broadcast.143), dimensions={1}, metadata={op_type="broadcast_in_dim" op_name="jit(while)/body/broadcast_in_dim[broadcast_dimensions=(1,) shape=(1, 392)]" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=62}
  %multiply.230 = f32[1,392]{1,0} multiply(f32[1,392]{1,0} %negate.212, f32[1,392]{1,0} %broadcast.229), metadata={op_type="mul" op_name="jit(while)/body/mul" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=62}
  %add.231 = f32[1,392]{1,0} add(f32[1,392]{1,0} %add.228, f32[1,392]{1,0} %multiply.230), metadata={op_type="add" op_name="jit(while)/body/add" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=62}
  %slice.186 = f32[1,1,392]{2,1,0} slice(f32[1,2,392]{2,1,0} %add.177), slice={[0:1], [0:1], [0:392]}, metadata={op_type="slice" op_name="jit(while)/body/slice[\n  limit_indices=(1, 1, 392)\n  start_indices=(0, 0, 0)\n  strides=(1, 1, 1)\n]" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=44}
  %reshape.187 = f32[1,392]{1,0} reshape(f32[1,1,392]{2,1,0} %slice.186), metadata={op_type="squeeze" op_name="jit(while)/body/squeeze[dimensions=(1,)]" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=44}
  %slice.188 = f32[1,1,392]{2,1,0} slice(f32[1,2,392]{2,1,0} %add.177), slice={[0:1], [1:2], [0:392]}, metadata={op_type="slice" op_name="jit(while)/body/slice[\n  limit_indices=(1, 2, 392)\n  start_indices=(0, 1, 0)\n  strides=(1, 1, 1)\n]" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=44}
  %reshape.189 = f32[1,392]{1,0} reshape(f32[1,1,392]{2,1,0} %slice.188), metadata={op_type="squeeze" op_name="jit(while)/body/squeeze[dimensions=(1,)]" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=44}
  %subtract.190 = f32[1,392]{1,0} subtract(f32[1,392]{1,0} %reshape.187, f32[1,392]{1,0} %reshape.189), metadata={op_type="sub" op_name="jit(while)/body/sub" source_file="/mnt/home/linmin/projects/NuX/nux/flows/bijective/logistic_cdf_mixture_logit.py" source_line=45}
  %convert.125 = f32[1,392]{1,0} convert(pred[1,392]{1,0} %compare.104), metadata={op_type="convert_element_type" op_name="jit(while)/body/convert_element_type[new_dtype=float32 weak_type=True]" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=29}
  %multiply.126 = f32[1,392]{1,0} multiply(f32[1,392]{1,0} %convert.125, f32[1,392]{1,0} %get-tuple-element.99), metadata={op_type="mul" op_name="jit(while)/body/mul" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=29}
  %convert.129 = f32[1,392]{1,0} convert(f32[1,392]{1,0} %multiply.126), metadata={op_type="convert_element_type" op_name="jit(while)/body/convert_element_type[new_dtype=float32 weak_type=False]" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=29}
  %convert.127 = f32[1,392]{1,0} convert(f32[1,392]{1,0} %subtract.108), metadata={op_type="convert_element_type" op_name="jit(while)/body/convert_element_type[new_dtype=float32 weak_type=False]" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=29}
  %multiply.128 = f32[1,392]{1,0} multiply(f32[1,392]{1,0} %convert.127, f32[1,392]{1,0} %get-tuple-element.98), metadata={op_type="mul" op_name="jit(while)/body/mul" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=29}
  %add.130 = f32[1,392]{1,0} add(f32[1,392]{1,0} %convert.129, f32[1,392]{1,0} %multiply.128), metadata={op_type="add" op_name="jit(while)/body/add" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=29}
  %convert.131 = f32[1,392]{1,0} convert(pred[1,392]{1,0} %compare.104), metadata={op_type="convert_element_type" op_name="jit(while)/body/convert_element_type[new_dtype=float32 weak_type=False]" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=30}
  %multiply.132 = f32[1,392]{1,0} multiply(f32[1,392]{1,0} %convert.131, f32[1,392]{1,0} %get-tuple-element.98), metadata={op_type="mul" op_name="jit(while)/body/mul" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=30}
  %multiply.133 = f32[1,392]{1,0} multiply(f32[1,392]{1,0} %subtract.108, f32[1,392]{1,0} %get-tuple-element.100), metadata={op_type="mul" op_name="jit(while)/body/mul" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=30}
  %convert.134 = f32[1,392]{1,0} convert(f32[1,392]{1,0} %multiply.133), metadata={op_type="convert_element_type" op_name="jit(while)/body/convert_element_type[new_dtype=float32 weak_type=False]" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=30}
  %add.135 = f32[1,392]{1,0} add(f32[1,392]{1,0} %multiply.132, f32[1,392]{1,0} %convert.134), metadata={op_type="add" op_name="jit(while)/body/add" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=30}
  %subtract.232 = f32[1,392]{1,0} subtract(f32[1,392]{1,0} %subtract.190, f32[1,392]{1,0} %get-tuple-element.96), metadata={op_type="sub" op_name="jit(while)/body/sub" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=34}
  %get-tuple-element.102 = f32[] get-tuple-element((f32[1,392,8]{2,1,0}, f32[1,392,8]{2,1,0}, f32[1,392,8]{2,1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, /*index=5*/f32[1,392]{1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, f32[]) %parameter.92), index=9
  %constant.233 = f32[] constant(1), metadata={op_type="add" op_name="jit(while)/body/add" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=36}
  %add.234 = f32[] add(f32[] %get-tuple-element.102, f32[] %constant.233), metadata={op_type="add" op_name="jit(while)/body/add" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=36}
  ROOT %tuple.235 = (f32[1,392,8]{2,1,0}, f32[1,392,8]{2,1,0}, f32[1,392,8]{2,1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, /*index=5*/f32[1,392]{1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, f32[]) tuple(f32[1,392,8]{2,1,0} %get-tuple-element.93, f32[1,392,8]{2,1,0} %get-tuple-element.94, f32[1,392,8]{2,1,0} %get-tuple-element.95, f32[1,392]{1,0} %get-tuple-element.96, f32[1,392]{1,0} %subtract.190, /*index=5*/f32[1,392]{1,0} %add.124, f32[1,392]{1,0} %add.130, f32[1,392]{1,0} %add.135, f32[1,392]{1,0} %subtract.232, f32[] %add.234)
}

%jit__where__9.236 (parameter.237: pred[], parameter.238: pred[], parameter.239: pred[]) -> pred[] {
  %constant.240 = pred[] constant(false)
  %parameter.237 = pred[] parameter(0)
  %parameter.238 = pred[] parameter(1)
  %parameter.239 = pred[] parameter(2)
  ROOT %select.241 = pred[] select(pred[] %parameter.237, pred[] %parameter.238, pred[] %parameter.239), metadata={op_type="select" op_name="jit(while)/cond/jit(_where)/select" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=45}
}

%jit_isinf__6.242 (parameter.243: f32[1,392]) -> pred[1,392] {
  %constant.244 = pred[] constant(false)
  %parameter.243 = f32[1,392]{1,0} parameter(0)
  %abs.245 = f32[1,392]{1,0} abs(f32[1,392]{1,0} %parameter.243), metadata={op_type="abs" op_name="jit(while)/cond/jit(allclose)/jit(isclose)/jit(isinf)/abs" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=46}
  %constant.246 = f32[] constant(inf), metadata={op_type="eq" op_name="jit(while)/cond/jit(allclose)/jit(isclose)/jit(isinf)/eq" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=46}
  %broadcast.247 = f32[1,392]{1,0} broadcast(f32[] %constant.246), dimensions={}, metadata={op_type="eq" op_name="jit(while)/cond/jit(allclose)/jit(isclose)/jit(isinf)/eq" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=46}
  ROOT %compare.248 = pred[1,392]{1,0} compare(f32[1,392]{1,0} %abs.245, f32[1,392]{1,0} %broadcast.247), direction=EQ, metadata={op_type="eq" op_name="jit(while)/cond/jit(allclose)/jit(isclose)/jit(isinf)/eq" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=46}
}

%jit_isinf__7.249 (parameter.250: f32[]) -> pred[] {
  %constant.251 = pred[] constant(false)
  %parameter.250 = f32[] parameter(0)
  %abs.252 = f32[] abs(f32[] %parameter.250), metadata={op_type="abs" op_name="jit(while)/cond/jit(allclose)/jit(isclose)/jit(isinf)/abs" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=46}
  %constant.253 = f32[] constant(inf), metadata={op_type="eq" op_name="jit(while)/cond/jit(allclose)/jit(isclose)/jit(isinf)/eq" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=46}
  ROOT %compare.254 = pred[] compare(f32[] %abs.252, f32[] %constant.253), direction=EQ, metadata={op_type="eq" op_name="jit(while)/cond/jit(allclose)/jit(isclose)/jit(isinf)/eq" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=46}
}

%jit_isnan__7.255 (parameter.256: f32[1,392]) -> pred[1,392] {
  %constant.257 = pred[] constant(false)
  %parameter.256 = f32[1,392]{1,0} parameter(0)
  ROOT %compare.258 = pred[1,392]{1,0} compare(f32[1,392]{1,0} %parameter.256, f32[1,392]{1,0} %parameter.256), direction=NE, metadata={op_type="ne" op_name="jit(while)/cond/jit(allclose)/jit(isclose)/jit(isnan)/ne" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=46}
}

%jit_isnan__8.259 (parameter.260: f32[]) -> pred[] {
  %constant.261 = pred[] constant(false)
  %parameter.260 = f32[] parameter(0)
  ROOT %compare.262 = pred[] compare(f32[] %parameter.260, f32[] %parameter.260), direction=NE, metadata={op_type="ne" op_name="jit(while)/cond/jit(allclose)/jit(isclose)/jit(isnan)/ne" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=46}
}

%jit_isclose__3.263 (parameter.264: f32[1,392], parameter.265: f32[], parameter.266: f32[], parameter.267: f32[]) -> pred[1,392] {
  %constant.268 = pred[] constant(false)
  %parameter.264 = f32[1,392]{1,0} parameter(0)
  %parameter.265 = f32[] parameter(1)
  %convert.269 = f32[] convert(f32[] %parameter.265), metadata={op_type="convert_element_type" op_name="jit(while)/cond/jit(allclose)/jit(isclose)/convert_element_type[\n  new_dtype=float32\n  weak_type=False\n]" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=46}
  %broadcast.272 = f32[1,392]{1,0} broadcast(f32[] %convert.269), dimensions={}, metadata={op_type="sub" op_name="jit(while)/cond/jit(allclose)/jit(isclose)/sub" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=46}
  %subtract.273 = f32[1,392]{1,0} subtract(f32[1,392]{1,0} %parameter.264, f32[1,392]{1,0} %broadcast.272), metadata={op_type="sub" op_name="jit(while)/cond/jit(allclose)/jit(isclose)/sub" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=46}
  %abs.274 = f32[1,392]{1,0} abs(f32[1,392]{1,0} %subtract.273), metadata={op_type="abs" op_name="jit(while)/cond/jit(allclose)/jit(isclose)/abs" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=46}
  %parameter.267 = f32[] parameter(3)
  %convert.271 = f32[] convert(f32[] %parameter.267), metadata={op_type="convert_element_type" op_name="jit(while)/cond/jit(allclose)/jit(isclose)/convert_element_type[\n  new_dtype=float32\n  weak_type=False\n]" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=46}
  %parameter.266 = f32[] parameter(2)
  %convert.270 = f32[] convert(f32[] %parameter.266), metadata={op_type="convert_element_type" op_name="jit(while)/cond/jit(allclose)/jit(isclose)/convert_element_type[\n  new_dtype=float32\n  weak_type=False\n]" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=46}
  %abs.275 = f32[] abs(f32[] %convert.269), metadata={op_type="abs" op_name="jit(while)/cond/jit(allclose)/jit(isclose)/abs" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=46}
  %multiply.276 = f32[] multiply(f32[] %convert.270, f32[] %abs.275), metadata={op_type="mul" op_name="jit(while)/cond/jit(allclose)/jit(isclose)/mul" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=46}
  %add.277 = f32[] add(f32[] %convert.271, f32[] %multiply.276), metadata={op_type="add" op_name="jit(while)/cond/jit(allclose)/jit(isclose)/add" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=46}
  %broadcast.278 = f32[1,392]{1,0} broadcast(f32[] %add.277), dimensions={}, metadata={op_type="le" op_name="jit(while)/cond/jit(allclose)/jit(isclose)/le" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=46}
  %compare.279 = pred[1,392]{1,0} compare(f32[1,392]{1,0} %abs.274, f32[1,392]{1,0} %broadcast.278), direction=LE, metadata={op_type="le" op_name="jit(while)/cond/jit(allclose)/jit(isclose)/le" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=46}
  %call.280 = pred[1,392]{1,0} call(f32[1,392]{1,0} %parameter.264), to_apply=%jit_isinf__6.242, metadata={op_type="xla_call" op_name="jit(while)/cond/jit(allclose)/jit(isclose)/xla_call[\n  backend=None\n  device=None\n  donated_invars=(False,)\n  inline=False\n  name=isinf\n]" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=46}
  %call.281 = pred[] call(f32[] %convert.269), to_apply=%jit_isinf__7.249, metadata={op_type="xla_call" op_name="jit(while)/cond/jit(allclose)/jit(isclose)/xla_call[\n  backend=None\n  device=None\n  donated_invars=(False,)\n  inline=False\n  name=isinf\n]" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=46}
  %broadcast.282 = pred[1,392]{1,0} broadcast(pred[] %call.281), dimensions={}, metadata={op_type="or" op_name="jit(while)/cond/jit(allclose)/jit(isclose)/or" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=46}
  %or.283 = pred[1,392]{1,0} or(pred[1,392]{1,0} %call.280, pred[1,392]{1,0} %broadcast.282), metadata={op_type="or" op_name="jit(while)/cond/jit(allclose)/jit(isclose)/or" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=46}
  %not.286 = pred[1,392]{1,0} not(pred[1,392]{1,0} %or.283), metadata={op_type="not" op_name="jit(while)/cond/jit(allclose)/jit(isclose)/not" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=46}
  %and.287 = pred[1,392]{1,0} and(pred[1,392]{1,0} %compare.279, pred[1,392]{1,0} %not.286), metadata={op_type="and" op_name="jit(while)/cond/jit(allclose)/jit(isclose)/and" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=46}
  %broadcast.284 = pred[1,392]{1,0} broadcast(pred[] %call.281), dimensions={}, metadata={op_type="and" op_name="jit(while)/cond/jit(allclose)/jit(isclose)/and" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=46}
  %and.285 = pred[1,392]{1,0} and(pred[1,392]{1,0} %call.280, pred[1,392]{1,0} %broadcast.284), metadata={op_type="and" op_name="jit(while)/cond/jit(allclose)/jit(isclose)/and" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=46}
  %broadcast.288 = f32[1,392]{1,0} broadcast(f32[] %convert.269), dimensions={}, metadata={op_type="eq" op_name="jit(while)/cond/jit(allclose)/jit(isclose)/eq" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=46}
  %compare.289 = pred[1,392]{1,0} compare(f32[1,392]{1,0} %parameter.264, f32[1,392]{1,0} %broadcast.288), direction=EQ, metadata={op_type="eq" op_name="jit(while)/cond/jit(allclose)/jit(isclose)/eq" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=46}
  %and.290 = pred[1,392]{1,0} and(pred[1,392]{1,0} %and.285, pred[1,392]{1,0} %compare.289), metadata={op_type="and" op_name="jit(while)/cond/jit(allclose)/jit(isclose)/and" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=46}
  %or.291 = pred[1,392]{1,0} or(pred[1,392]{1,0} %and.287, pred[1,392]{1,0} %and.290), metadata={op_type="or" op_name="jit(while)/cond/jit(allclose)/jit(isclose)/or" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=46}
  %call.292 = pred[1,392]{1,0} call(f32[1,392]{1,0} %parameter.264), to_apply=%jit_isnan__7.255, metadata={op_type="xla_call" op_name="jit(while)/cond/jit(allclose)/jit(isclose)/xla_call[\n  backend=None\n  device=None\n  donated_invars=(False,)\n  inline=False\n  name=isnan\n]" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=46}
  %call.293 = pred[] call(f32[] %convert.269), to_apply=%jit_isnan__8.259, metadata={op_type="xla_call" op_name="jit(while)/cond/jit(allclose)/jit(isclose)/xla_call[\n  backend=None\n  device=None\n  donated_invars=(False,)\n  inline=False\n  name=isnan\n]" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=46}
  %broadcast.294 = pred[1,392]{1,0} broadcast(pred[] %call.293), dimensions={}, metadata={op_type="or" op_name="jit(while)/cond/jit(allclose)/jit(isclose)/or" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=46}
  %or.295 = pred[1,392]{1,0} or(pred[1,392]{1,0} %call.292, pred[1,392]{1,0} %broadcast.294), metadata={op_type="or" op_name="jit(while)/cond/jit(allclose)/jit(isclose)/or" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=46}
  %not.296 = pred[1,392]{1,0} not(pred[1,392]{1,0} %or.295), metadata={op_type="not" op_name="jit(while)/cond/jit(allclose)/jit(isclose)/not" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=46}
  ROOT %and.297 = pred[1,392]{1,0} and(pred[1,392]{1,0} %or.291, pred[1,392]{1,0} %not.296), metadata={op_type="and" op_name="jit(while)/cond/jit(allclose)/jit(isclose)/and" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=46}
}

%primitive_computation_and__3.298 (parameter.299: pred[], parameter.300: pred[]) -> pred[] {
  %constant.301 = pred[] constant(false)
  %parameter.299 = pred[] parameter(0)
  %parameter.300 = pred[] parameter(1)
  ROOT %and.302 = pred[] and(pred[] %parameter.299, pred[] %parameter.300), metadata={op_type="and" op_name="and" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=46}
}

%jit_allclose__3.303 (parameter.304: f32[1,392], parameter.305: f32[], parameter.306: f32[]) -> pred[] {
  %constant.307 = pred[] constant(false)
  %parameter.304 = f32[1,392]{1,0} parameter(0)
  %parameter.305 = f32[] parameter(1)
  %constant.308 = f32[] constant(1e-05), metadata={op_type="xla_call" op_name="jit(while)/cond/jit(allclose)/xla_call[\n  backend=None\n  device=None\n  donated_invars=(False, False, False, False)\n  inline=False\n  name=isclose\n]" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=46}
  %parameter.306 = f32[] parameter(2)
  %call.309 = pred[1,392]{1,0} call(f32[1,392]{1,0} %parameter.304, f32[] %parameter.305, f32[] %constant.308, f32[] %parameter.306), to_apply=%jit_isclose__3.263, metadata={op_type="xla_call" op_name="jit(while)/cond/jit(allclose)/xla_call[\n  backend=None\n  device=None\n  donated_invars=(False, False, False, False)\n  inline=False\n  name=isclose\n]" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=46}
  %constant.310 = pred[] constant(true), metadata={op_type="reduce_and" op_name="jit(while)/cond/jit(allclose)/reduce_and[axes=(0, 1)]" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=46}
  ROOT %reduce.311 = pred[] reduce(pred[1,392]{1,0} %call.309, pred[] %constant.310), dimensions={0,1}, to_apply=%primitive_computation_and__3.298, metadata={op_type="reduce_and" op_name="jit(while)/cond/jit(allclose)/reduce_and[axes=(0, 1)]" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=46}
}

%jit__where__10.312 (parameter.313: pred[], parameter.314: pred[], parameter.315: pred[]) -> pred[] {
  %constant.316 = pred[] constant(false)
  %parameter.313 = pred[] parameter(0)
  %parameter.314 = pred[] parameter(1)
  %parameter.315 = pred[] parameter(2)
  ROOT %select.317 = pred[] select(pred[] %parameter.313, pred[] %parameter.314, pred[] %parameter.315), metadata={op_type="select" op_name="jit(while)/cond/jit(_where)/select" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=47}
}

%cond_computation__16.318 (parameter.319: (f32[1,392,8], f32[1,392,8], f32[1,392,8], f32[1,392], f32[1,392], /*index=5*/f32[1,392], f32[1,392], f32[1,392], f32[1,392], f32[])) -> pred[] {
  %parameter.319 = (f32[1,392,8]{2,1,0}, f32[1,392,8]{2,1,0}, f32[1,392,8]{2,1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, /*index=5*/f32[1,392]{1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, f32[]) parameter(0)
  %get-tuple-element.320 = f32[1,392,8]{2,1,0} get-tuple-element((f32[1,392,8]{2,1,0}, f32[1,392,8]{2,1,0}, f32[1,392,8]{2,1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, /*index=5*/f32[1,392]{1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, f32[]) %parameter.319), index=0
  %get-tuple-element.321 = f32[1,392,8]{2,1,0} get-tuple-element((f32[1,392,8]{2,1,0}, f32[1,392,8]{2,1,0}, f32[1,392,8]{2,1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, /*index=5*/f32[1,392]{1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, f32[]) %parameter.319), index=1
  %get-tuple-element.322 = f32[1,392,8]{2,1,0} get-tuple-element((f32[1,392,8]{2,1,0}, f32[1,392,8]{2,1,0}, f32[1,392,8]{2,1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, /*index=5*/f32[1,392]{1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, f32[]) %parameter.319), index=2
  %get-tuple-element.323 = f32[1,392]{1,0} get-tuple-element((f32[1,392,8]{2,1,0}, f32[1,392,8]{2,1,0}, f32[1,392,8]{2,1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, /*index=5*/f32[1,392]{1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, f32[]) %parameter.319), index=3
  %get-tuple-element.324 = f32[1,392]{1,0} get-tuple-element((f32[1,392,8]{2,1,0}, f32[1,392,8]{2,1,0}, f32[1,392,8]{2,1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, /*index=5*/f32[1,392]{1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, f32[]) %parameter.319), index=4
  %get-tuple-element.325 = f32[1,392]{1,0} get-tuple-element((f32[1,392,8]{2,1,0}, f32[1,392,8]{2,1,0}, f32[1,392,8]{2,1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, /*index=5*/f32[1,392]{1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, f32[]) %parameter.319), index=5
  %get-tuple-element.326 = f32[1,392]{1,0} get-tuple-element((f32[1,392,8]{2,1,0}, f32[1,392,8]{2,1,0}, f32[1,392,8]{2,1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, /*index=5*/f32[1,392]{1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, f32[]) %parameter.319), index=6
  %get-tuple-element.327 = f32[1,392]{1,0} get-tuple-element((f32[1,392,8]{2,1,0}, f32[1,392,8]{2,1,0}, f32[1,392,8]{2,1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, /*index=5*/f32[1,392]{1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, f32[]) %parameter.319), index=7
  %constant.330 = pred[] constant(false)
  %get-tuple-element.329 = f32[] get-tuple-element((f32[1,392,8]{2,1,0}, f32[1,392,8]{2,1,0}, f32[1,392,8]{2,1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, /*index=5*/f32[1,392]{1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, f32[]) %parameter.319), index=9
  %constant.331 = f32[] constant(20000), metadata={op_type="gt" op_name="jit(while)/cond/gt" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=45}
  %compare.332 = pred[] compare(f32[] %get-tuple-element.329, f32[] %constant.331), direction=GT, metadata={op_type="gt" op_name="jit(while)/cond/gt" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=45}
  %constant.333 = pred[] constant(true), metadata={op_type="xla_call" op_name="jit(while)/cond/xla_call[\n  backend=None\n  device=None\n  donated_invars=(False, False, False)\n  inline=False\n  name=_where\n]" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=45}
  %constant.334 = pred[] constant(false), metadata={op_type="xla_call" op_name="jit(while)/cond/xla_call[\n  backend=None\n  device=None\n  donated_invars=(False, False, False)\n  inline=False\n  name=_where\n]" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=45}
  %call.335 = pred[] call(pred[] %compare.332, pred[] %constant.333, pred[] %constant.334), to_apply=%jit__where__9.236, metadata={op_type="xla_call" op_name="jit(while)/cond/xla_call[\n  backend=None\n  device=None\n  donated_invars=(False, False, False)\n  inline=False\n  name=_where\n]" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=45}
  %get-tuple-element.328 = f32[1,392]{1,0} get-tuple-element((f32[1,392,8]{2,1,0}, f32[1,392,8]{2,1,0}, f32[1,392,8]{2,1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, /*index=5*/f32[1,392]{1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, f32[]) %parameter.319), index=8
  %constant.336 = f32[] constant(0), metadata={op_type="xla_call" op_name="jit(while)/cond/xla_call[\n  backend=None\n  device=None\n  donated_invars=(False, False, False)\n  inline=False\n  name=allclose\n]" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=46}
  %constant.337 = f32[] constant(1e-08), metadata={op_type="xla_call" op_name="jit(while)/cond/xla_call[\n  backend=None\n  device=None\n  donated_invars=(False, False, False)\n  inline=False\n  name=allclose\n]" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=46}
  %call.338 = pred[] call(f32[1,392]{1,0} %get-tuple-element.328, f32[] %constant.336, f32[] %constant.337), to_apply=%jit_allclose__3.303, metadata={op_type="xla_call" op_name="jit(while)/cond/xla_call[\n  backend=None\n  device=None\n  donated_invars=(False, False, False)\n  inline=False\n  name=allclose\n]" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=46}
  %or.344 = pred[] or(pred[] %call.335, pred[] %call.338), metadata={op_type="or" op_name="jit(while)/cond/or" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=48}
  %not.345 = pred[] not(pred[] %or.344), metadata={op_type="not" op_name="jit(while)/cond/not" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=48}
  %constant.339 = f32[] constant(0), metadata={op_type="gt" op_name="jit(while)/cond/gt" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=47}
  %compare.340 = pred[] compare(f32[] %get-tuple-element.329, f32[] %constant.339), direction=GT, metadata={op_type="gt" op_name="jit(while)/cond/gt" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=47}
  %constant.341 = pred[] constant(false), metadata={op_type="xla_call" op_name="jit(while)/cond/xla_call[\n  backend=None\n  device=None\n  donated_invars=(False, False, False)\n  inline=False\n  name=_where\n]" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=47}
  %constant.342 = pred[] constant(true), metadata={op_type="xla_call" op_name="jit(while)/cond/xla_call[\n  backend=None\n  device=None\n  donated_invars=(False, False, False)\n  inline=False\n  name=_where\n]" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=47}
  %call.343 = pred[] call(pred[] %compare.340, pred[] %constant.341, pred[] %constant.342), to_apply=%jit__where__10.312, metadata={op_type="xla_call" op_name="jit(while)/cond/xla_call[\n  backend=None\n  device=None\n  donated_invars=(False, False, False)\n  inline=False\n  name=_where\n]" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=47}
  ROOT %or.346 = pred[] or(pred[] %not.345, pred[] %call.343), metadata={op_type="or" op_name="jit(while)/cond/or" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=48}
}

ENTRY %jit_prim_fun__79.359 (parameter.1: f32[1,392,8], parameter.2: f32[1,392,8], parameter.3: f32[1,392,8], parameter.4: f32[1,392], parameter.5: f32[1,392], parameter.6: f32[1,392], parameter.7: f32[1,392], parameter.8: f32[1,392], parameter.9: f32[1,392], parameter.10: f32[]) -> (f32[1,392], f32[1,392], f32[1,392], f32[1,392], f32[1,392], /*index=5*/f32[1,392], f32[]) {
  %constant.11 = pred[] constant(false)
  %parameter.1 = f32[1,392,8]{2,1,0} parameter(0)
  %parameter.2 = f32[1,392,8]{2,1,0} parameter(1)
  %parameter.3 = f32[1,392,8]{2,1,0} parameter(2)
  %parameter.4 = f32[1,392]{1,0} parameter(3)
  %parameter.5 = f32[1,392]{1,0} parameter(4)
  %parameter.6 = f32[1,392]{1,0} parameter(5)
  %parameter.7 = f32[1,392]{1,0} parameter(6)
  %parameter.8 = f32[1,392]{1,0} parameter(7)
  %parameter.9 = f32[1,392]{1,0} parameter(8)
  %parameter.10 = f32[] parameter(9)
  %tuple.12 = (f32[1,392,8]{2,1,0}, f32[1,392,8]{2,1,0}, f32[1,392,8]{2,1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, /*index=5*/f32[1,392]{1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, f32[]) tuple(f32[1,392,8]{2,1,0} %parameter.1, f32[1,392,8]{2,1,0} %parameter.2, f32[1,392,8]{2,1,0} %parameter.3, f32[1,392]{1,0} %parameter.4, f32[1,392]{1,0} %parameter.5, /*index=5*/f32[1,392]{1,0} %parameter.6, f32[1,392]{1,0} %parameter.7, f32[1,392]{1,0} %parameter.8, f32[1,392]{1,0} %parameter.9, f32[] %parameter.10), metadata={op_type="while" op_name="jit(while)/while[body_nconsts=3 cond_nconsts=0]" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=51}
  %while.347 = (f32[1,392,8]{2,1,0}, f32[1,392,8]{2,1,0}, f32[1,392,8]{2,1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, /*index=5*/f32[1,392]{1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, f32[]) while((f32[1,392,8]{2,1,0}, f32[1,392,8]{2,1,0}, f32[1,392,8]{2,1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, /*index=5*/f32[1,392]{1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, f32[]) %tuple.12), condition=%cond_computation__16.318, body=%body_computation__16.91, metadata={op_type="while" op_name="jit(while)/while[body_nconsts=3 cond_nconsts=0]" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=51}
  %get-tuple-element.348 = f32[1,392,8]{2,1,0} get-tuple-element((f32[1,392,8]{2,1,0}, f32[1,392,8]{2,1,0}, f32[1,392,8]{2,1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, /*index=5*/f32[1,392]{1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, f32[]) %while.347), index=0, metadata={op_type="while" op_name="jit(while)/while[body_nconsts=3 cond_nconsts=0]" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=51}
  %get-tuple-element.349 = f32[1,392,8]{2,1,0} get-tuple-element((f32[1,392,8]{2,1,0}, f32[1,392,8]{2,1,0}, f32[1,392,8]{2,1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, /*index=5*/f32[1,392]{1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, f32[]) %while.347), index=1, metadata={op_type="while" op_name="jit(while)/while[body_nconsts=3 cond_nconsts=0]" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=51}
  %get-tuple-element.350 = f32[1,392,8]{2,1,0} get-tuple-element((f32[1,392,8]{2,1,0}, f32[1,392,8]{2,1,0}, f32[1,392,8]{2,1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, /*index=5*/f32[1,392]{1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, f32[]) %while.347), index=2, metadata={op_type="while" op_name="jit(while)/while[body_nconsts=3 cond_nconsts=0]" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=51}
  %get-tuple-element.351 = f32[1,392]{1,0} get-tuple-element((f32[1,392,8]{2,1,0}, f32[1,392,8]{2,1,0}, f32[1,392,8]{2,1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, /*index=5*/f32[1,392]{1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, f32[]) %while.347), index=3, metadata={op_type="while" op_name="jit(while)/while[body_nconsts=3 cond_nconsts=0]" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=51}
  %get-tuple-element.352 = f32[1,392]{1,0} get-tuple-element((f32[1,392,8]{2,1,0}, f32[1,392,8]{2,1,0}, f32[1,392,8]{2,1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, /*index=5*/f32[1,392]{1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, f32[]) %while.347), index=4, metadata={op_type="while" op_name="jit(while)/while[body_nconsts=3 cond_nconsts=0]" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=51}
  %get-tuple-element.353 = f32[1,392]{1,0} get-tuple-element((f32[1,392,8]{2,1,0}, f32[1,392,8]{2,1,0}, f32[1,392,8]{2,1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, /*index=5*/f32[1,392]{1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, f32[]) %while.347), index=5, metadata={op_type="while" op_name="jit(while)/while[body_nconsts=3 cond_nconsts=0]" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=51}
  %get-tuple-element.354 = f32[1,392]{1,0} get-tuple-element((f32[1,392,8]{2,1,0}, f32[1,392,8]{2,1,0}, f32[1,392,8]{2,1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, /*index=5*/f32[1,392]{1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, f32[]) %while.347), index=6, metadata={op_type="while" op_name="jit(while)/while[body_nconsts=3 cond_nconsts=0]" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=51}
  %get-tuple-element.355 = f32[1,392]{1,0} get-tuple-element((f32[1,392,8]{2,1,0}, f32[1,392,8]{2,1,0}, f32[1,392,8]{2,1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, /*index=5*/f32[1,392]{1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, f32[]) %while.347), index=7, metadata={op_type="while" op_name="jit(while)/while[body_nconsts=3 cond_nconsts=0]" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=51}
  %get-tuple-element.356 = f32[1,392]{1,0} get-tuple-element((f32[1,392,8]{2,1,0}, f32[1,392,8]{2,1,0}, f32[1,392,8]{2,1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, /*index=5*/f32[1,392]{1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, f32[]) %while.347), index=8, metadata={op_type="while" op_name="jit(while)/while[body_nconsts=3 cond_nconsts=0]" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=51}
  %get-tuple-element.357 = f32[] get-tuple-element((f32[1,392,8]{2,1,0}, f32[1,392,8]{2,1,0}, f32[1,392,8]{2,1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, /*index=5*/f32[1,392]{1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, f32[]) %while.347), index=9, metadata={op_type="while" op_name="jit(while)/while[body_nconsts=3 cond_nconsts=0]" source_file="/mnt/home/linmin/projects/NuX/nux/util/iterative.py" source_line=51}
  ROOT %tuple.358 = (f32[1,392]{1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, f32[1,392]{1,0}, /*index=5*/f32[1,392]{1,0}, f32[]) tuple(f32[1,392]{1,0} %get-tuple-element.351, f32[1,392]{1,0} %get-tuple-element.352, f32[1,392]{1,0} %get-tuple-element.353, f32[1,392]{1,0} %get-tuple-element.354, f32[1,392]{1,0} %get-tuple-element.355, /*index=5*/f32[1,392]{1,0} %get-tuple-element.356, f32[] %get-tuple-element.357)
}

